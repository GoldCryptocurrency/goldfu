(function(){this.MarketData=flight.component(function(){return this.load=function(event,data){return this.trigger("market::candlestick::request"),this.reqK(gon.market.id,data.x)},this.reqK=function(market,minutes,limit){var tid,url;return null==limit&&(limit=768),tid=gon.trades.length>0?gon.trades[0].tid:0,this.last_tid&&(tid=this.last_tid+1),url="/api/v2/k_with_pending_trades.json?market="+market+"&limit="+limit+"&period="+minutes+"&trade_id="+tid,$.getJSON(url,function(_this){return function(data){return _this.handleData(data,minutes)}}(this))},this.checkTrend=function(pre,cur){var cur_close,pre_close,_;return _=cur[0],_=cur[1],_=cur[2],_=cur[3],cur_close=cur[4],_=cur[5],_=pre[0],_=pre[1],_=pre[2],_=pre[3],pre_close=pre[4],_=pre[5],cur_close>=pre_close},this.createPoint=function(i,trade){var gap,p,v,x,_ref;if(gap=Math.floor((trade.date-this.next_ts)/(60*this.minutes)),gap>100)return console.log("failed to update, too wide gap."),window.clearInterval(this.interval),this.trigger("market::candlestick::request"),i;for(;trade.date>=this.next_ts;)x=1e3*this.next_ts,this.last_ts=this.next_ts,this.next_ts=this.last_ts+60*this.minutes,_ref=trade.date<this.next_ts?[parseFloat(trade.price),parseFloat(trade.amount)]:[this.points.close[i][1],0],p=_ref[0],v=_ref[1],this.points.close.push([x,p]),this.points.candlestick.push([x,p,p,p,p]),this.points.volume.push({x:x,y:v,color:p>=this.points.close[i][1]?"rgba(0, 255, 0, 0.5)":"rgba(255, 0, 0, 0.5)"}),i+=1;return i},this.updatePoint=function(i,trade){var p,v;return p=parseFloat(trade.price),v=parseFloat(trade.amount),this.points.close[i][1]=p,p>this.points.candlestick[i][2]?this.points.candlestick[i][2]=p:p<this.points.candlestick[i][3]&&(this.points.candlestick[i][3]=p),this.points.candlestick[i][4]=p,this.points.volume[i].y+=v,this.points.volume[i].color=i>0&&this.points.close[i][1]>=this.points.close[i-1][1]?"rgba(0, 255, 0, 0.5)":"rgba(255, 0, 0, 0.5)"},this.refreshUpdatedAt=function(){return this.updated_at=Math.round((new Date).valueOf()/1e3)},this.processTrades=function(){var i;return i=this.points.candlestick.length-1,$.each(this.tradesCache,function(_this){return function(ti,trade){return trade.tid>_this.last_tid?(_this.last_ts<=trade.date&&trade.date<_this.next_ts?_this.updatePoint(i,trade):_this.next_ts<=trade.date&&(i=_this.createPoint(i,trade)),_this.last_tid=trade.tid,_this.refreshUpdatedAt()):void 0}}(this)),this.tradesCache=[]},this.prepare=function(k){var candlestick,close,close_price,cur,high,i,low,open,time,trend,vol,volume,_i,_len,_ref;for(_ref=[[],[],[]],volume=_ref[0],candlestick=_ref[1],close_price=_ref[2],i=_i=0,_len=k.length;_len>_i;i=++_i)cur=k[i],time=cur[0],open=cur[1],high=cur[2],low=cur[3],close=cur[4],vol=cur[5],time=1e3*time,trend=i>=1?this.checkTrend(k[i-1],cur):!0,close_price.push([time,close]),candlestick.push([time,open,high,low,close]),volume.push({x:time,y:vol,color:trend?"rgba(0, 255, 0, 0.5)":"rgba(255, 0, 0, 0.5)"});return{minutes:this.minutes,candlestick:candlestick.slice(0,-1),volume:volume.slice(0,-1),close:close_price.slice(0,-1)}},this.handleData=function(data,minutes){return this.minutes=minutes,this.tradesCache=data.trades.concat(this.tradesCache),this.points=this.prepare(data.k),this.last_tid=0,this.last_ts=this.points.candlestick.length>0?this.points.candlestick[this.points.candlestick.length-1][0]/1e3:0,this.next_ts=this.last_ts+60*minutes,this.deliverTrades("market::candlestick::response")},this.deliverTrades=function(event){return this.processTrades(),this.trigger(event,{minutes:this.points.minutes,candlestick:this.points.candlestick.slice(1),close:this.points.close.slice(1),volume:this.points.volume.slice(1)}),this.points.close=this.points.close.slice(-2),this.points.candlestick=this.points.candlestick.slice(-2),this.points.volume=this.points.volume.slice(-2)},this.hardRefresh=function(threshold){var ts;return ts=Math.round((new Date).valueOf()/1e3),ts>this.updated_at+threshold?(this.refreshUpdatedAt(),this.reqK(gon.market.id,this.minutes)):void 0},this.startDeliver=function(){var deliver;return null!=this.interval&&window.clearInterval(this.interval),deliver=function(_this){return function(){return _this.tradesCache.length>0?_this.deliverTrades("market::candlestick::trades"):_this.hardRefresh(300)}}(this),this.interval=setInterval(deliver,999)},this.cacheTrades=function(event,data){return this.tradesCache=Array.prototype.concat(this.tradesCache,data.trades)},this.after("initialize",function(){return this.tradesCache=[],this.on(document,"market::trades",this.cacheTrades),this.on(document,"switch::range_switch",this.load),this.on(document,"market::candlestick::created",this.startDeliver)})})}).call(this);